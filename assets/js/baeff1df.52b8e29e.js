"use strict";(self.webpackChunkresgrid_docs=self.webpackChunkresgrid_docs||[]).push([[5897],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=s(n),m=r,k=c["".concat(p,".").concat(m)]||c[m]||u[m]||o;return n?a.createElement(k,i(i({ref:t},d),{},{components:n})):a.createElement(k,i({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},2065:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:2},i="API Authentication",l={unversionedId:"api/authentication",id:"api/authentication",title:"API Authentication",description:"Resgrid as of the v4 version of the API uses the JWT (JSON Web Token)  standard with OpenID Connect. You need to auth to the Resgrid API via a specific endpoint before you can call operations against the API.",source:"@site/docs/api/authentication.md",sourceDirName:"api",slug:"/api/authentication",permalink:"/api/authentication",draft:!1,editUrl:"https://github.com/Resgrid/docs/tree/develop/docs/api/authentication.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"API Information",permalink:"/api/information"},next:{title:"How-Tos",permalink:"/category/how-tos"}},p={},s=[{value:"Connect Operation",id:"connect-operation",level:2},{value:"Authorization Expiration",id:"authorization-expiration",level:2},{value:"Authorizing API Calls",id:"authorizing-api-calls",level:2}],d={toc:s};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"api-authentication"},"API Authentication"),(0,r.kt)("p",null,"Resgrid as of the v4 version of the API uses the JWT (JSON Web Token) ",(0,r.kt)("a",{parentName:"p",href:"https://jwt.io/"},"https://jwt.io/")," standard with OpenID Connect. You need to auth to the Resgrid API via a specific endpoint before you can call operations against the API."),(0,r.kt)("h2",{id:"connect-operation"},"Connect Operation"),(0,r.kt)("p",null,"To Authenticate with the Resgrid API you need to submit a POST request to the the ",(0,r.kt)("inlineCode",{parentName:"p"},"v4/connect/token")," endpoint. Once this is done you will have the data needed to make subsequent calls the the other functions on the Resgrid API."),(0,r.kt)("p",null,"Example of using a Username and Password Combo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},' curl -v -X POST \\\n-H "Content-type:application/x-www-form-urlencoded" \\\n"https://api.resgrid.com/api/v4/connect/token" \\\n-d "grant_type=password&scope=openid profile&username=${username}&password=${password}"\n')),(0,r.kt)("p",null,"Request Form Fields"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"grant_type")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"password")," if you are supplying a username and password, ",(0,r.kt)("inlineCode",{parentName:"td"},"refresh_token")," if you are supplying a refresh token to get a new ",(0,r.kt)("inlineCode",{parentName:"td"},"auth_token"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"refresh_token")),(0,r.kt)("td",{parentName:"tr",align:null},"Only if your ",(0,r.kt)("inlineCode",{parentName:"td"},"grant_type")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"refresh_token")," your current refresh token")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"username")),(0,r.kt)("td",{parentName:"tr",align:null},"Only if ",(0,r.kt)("inlineCode",{parentName:"td"},"grant_type")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"password")," your username.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"password")),(0,r.kt)("td",{parentName:"tr",align:null},"Only if ",(0,r.kt)("inlineCode",{parentName:"td"},"grant_type")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"password")," your users password.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"scope")),(0,r.kt)("td",{parentName:"tr",align:null},"Set to ",(0,r.kt)("inlineCode",{parentName:"td"},"openid profile offline_access")," or if you don't want to use the refresh token flow ",(0,r.kt)("inlineCode",{parentName:"td"},"openid profile"),".")))),(0,r.kt)("p",null,"Example Response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},' HTTP/1.1 200 OK\n Content-Type: application/json\n Cache-Control: no-store\n Pragma: no-cache\n {\n     "access_token": "eyJhbGciOiJSU0Et...",\n     "token_type": "Bearer",\n     "refresh_token": "eyJhbGciOiJSU0EtT0FFUC...",\n     "expires_in": 86398,\n     "id_token": "eyJhbGciOiJSUzI1N..."\n }\n')),(0,r.kt)("p",null,"Response Properties"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"access_token")),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("inlineCode",{parentName:"td"},"Bearer")," access token you need to pass into requests to authorize them.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"token_type")),(0,r.kt)("td",{parentName:"tr",align:null},"Commonly ",(0,r.kt)("inlineCode",{parentName:"td"},"Bearer")," for almost all use cases.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"expires_in")),(0,r.kt)("td",{parentName:"tr",align:null},"The expiration time of the access token in seconds.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"refresh_token")),(0,r.kt)("td",{parentName:"tr",align:null},"An opaque refresh token. This is returned if the ",(0,r.kt)("inlineCode",{parentName:"td"},"offline_access")," scope is granted.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"id_token")),(0,r.kt)("td",{parentName:"tr",align:null},"An ID token. This is returned if the openid scope is granted.")))),(0,r.kt)("h2",{id:"authorization-expiration"},"Authorization Expiration"),(0,r.kt)("p",null,"Once you have called the ",(0,r.kt)("inlineCode",{parentName:"p"},"v4/connect/token")," endpoint and received a response you can now use data from that response to authorize against other Resgrid API calls."),(0,r.kt)("p",null,"You will want to use the ",(0,r.kt)("inlineCode",{parentName:"p"},"access_token")," returned as part of the ",(0,r.kt)("inlineCode",{parentName:"p"},"v4/connect/token")," call above. Note, these tokens do expire, when you authenticated you received a ",(0,r.kt)("inlineCode",{parentName:"p"},"expires_in")," as part of the payload result, your ",(0,r.kt)("inlineCode",{parentName:"p"},"access_token")," will expire in the amount of seconds in that value from when you received the response."),(0,r.kt)("p",null,"You can call ",(0,r.kt)("inlineCode",{parentName:"p"},"v4/connect/token")," with the username and password or you can pass in ",(0,r.kt)("inlineCode",{parentName:"p"},"offline_access")," as part of the ",(0,r.kt)("inlineCode",{parentName:"p"},"scope")," parameter to receive a ",(0,r.kt)("inlineCode",{parentName:"p"},"refresh_token")," as part of the response and pass that as ",(0,r.kt)("inlineCode",{parentName:"p"},"refresh_token")," into the body instead of ",(0,r.kt)("inlineCode",{parentName:"p"},"username")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"password"),". You also need to set the ",(0,r.kt)("inlineCode",{parentName:"p"},"grant_type")," as ",(0,r.kt)("inlineCode",{parentName:"p"},"refresh_token"),". This is useful if you don't want to reuse username and passwords for the backend systems and only want to prompt a user for a username and password every once and a while."),(0,r.kt)("h2",{id:"authorizing-api-calls"},"Authorizing API Calls"),(0,r.kt)("p",null,"Once you have a valid, and not expired, ",(0,r.kt)("inlineCode",{parentName:"p"},"access_token")," you can pass it in the Authorization header value as a Bearer token."),(0,r.kt)("p",null,"Example Request using ",(0,r.kt)("inlineCode",{parentName:"p"},"access_token"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},' curl -v -X GET \\\n-H "Authorization: Bearer `access_token`" \\\n"https://api.resgrid.com/api/v4/Statuses/GetAllStatusesForPersonnel" \\\n')),(0,r.kt)("p",null,"Example Response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},' HTTP/1.1 200 OK\n Content-Type: application/json\n Cache-Control: no-store\n Pragma: no-cache\n {\n    "Data":{}",\n    "Version":"v4",\n    "Node":"resgrid-api-6fb86b9f6c-wvs4d",\n    "Environment":"QA",\n    "RequestId":"00-62a47705765e3814b64e8af52dcf2655-5a95c0273223f544-01",\n    "Status":"success",\n    "PreviousPageUrl":null,\n    "NextPageUrl":null\n}\n')))}u.isMDXComponent=!0}}]);